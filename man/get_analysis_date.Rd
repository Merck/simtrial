% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_analysis_date.R
\name{get_analysis_date}
\alias{get_analysis_date}
\title{Get the analysis date under multiple conditions}
\usage{
get_analysis_date(
  simu_data,
  planned_calendar_time = NA,
  target_event_overall = NA,
  target_event_per_stratum = NA,
  max_extension_for_target_event = NA,
  previous_analysis_date = 0,
  min_time_after_previous_analysis = NA,
  enroll_rate = NA,
  min_n_overall = NA,
  min_n_per_stratum = NA,
  min_followup = NA
)
}
\arguments{
\item{simu_data}{A simulated data generated by sim_pw_surv()}

\item{planned_calendar_time}{A numerical value specifying the planned calendar time for the analysis.}

\item{target_event_overall}{A numerical value specifying the targeted events for the overall population.}

\item{target_event_per_stratum}{A numerical vector specifying the targeted events per stratum.}

\item{max_extension_for_target_event}{A numerical value specifying the max time extension to reach targeted events.}

\item{previous_analysis_date}{A numerical value specifying the previous analysis date.}

\item{min_time_after_previous_analysis}{A numerical value specifying the planned minimum time after the previous analysis.}

\item{enroll_rate}{Enrollment rates, see details and examples.}

\item{min_n_overall}{A numerical value specifying the minimal overall sample size enrolled to kick off the analysis.}

\item{min_n_per_stratum}{A numerical value specifying the minimal sample size enrolled per stratum to kick off the analysis.}

\item{min_followup}{A numerical value specifying the minimal follow-up time after specified enrollment fraction in min_n_overall or min_n_per_stratum.}
}
\value{
a numerical value of the analysis date
}
\description{
Get the analysis date under multiple conditions
}
\examples{
library(gsDesign2)
library(simtrial)

alpha <- 0.025
ratio <- 3
n <- 500
info_frac <- c(0.7, 1)
prevelance_ratio <- c(0.4, 0.6)
study_duration <- 48

# two strata
stratum <- c("Biomarker-positive", "Biomarker-negative")

prevelance_ratio <- c(0.6, 0.4)
# enrollment rate
enroll_rate <- define_enroll_rate(
  stratum = rep(stratum, each = 2),
  duration = c(2, 10, 2, 10),
  rate =  c(c(1, 4) * prevelance_ratio[1], c(1, 4) * prevelance_ratio[2]))
enroll_rate$rate <- enroll_rate$rate * n / sum(enroll_rate$duration * enroll_rate$rate)

# failure rate
med_pos <- 10         # median of the biomarker positive population
med_neg <- 8          # median of the biomarker negative population
hr_pos <- c(1, 0.7)   # hazard ratio of the biomarker positive population
hr_neg <- c(1, 0.8)   # hazard ratio of the biomarker negative population
fail_rate <- define_fail_rate(
  stratum = rep(stratum, each = 2),
  duration = 1000,
  fail_rate = c(log(2) / c(med_pos, med_pos, med_neg, med_neg)),
  hr = c(hr_pos, hr_neg),
  dropout_rate = 0.01)

# simulate data
temp <- simfix2simpwsurv(fail_rate)        # transfer the failure rate
set.seed(2023)
simu_data <- sim_pw_surv(
  n = n,                                                            # sample size
  stratum = tibble(stratum = stratum, p = prevelance_ratio),        # stratified design
                                                                    # with prevalence ratio of 6:4
  block =  c("control", "control", "experimental", "experimental"), # randomization ratio
  enroll_rate = enroll_rate,                                        # enrollment rate
  fail_rate = temp$fail_rate,                                       # failure rate
  dropout_rate = temp$dropout_rate)                                 # dropout rate

# example 1: cut for analysis at the 24-th month.
get_analysis_date(
  simu_data,
  planned_calendar_time = 24)

# example 2: cut for analysis when there are 300 events
# in the overall population.
get_analysis_date(
  simu_data,
  target_event_overall = 300)

# example 3: cut for analysis at the 24-th month,
# and there are 300 events in the overall population,
# which arrives later.
get_analysis_date(
  simu_data,
  planned_calendar_time = 24,
  target_event_overall = 300)

# example 4: cut for analysis when there are at least 100
# events in the biomarker-positive population,
# and at least 200 events in the biomarker-negative population,
# which arrives later.
get_analysis_date(
  simu_data,
  target_event_per_stratum = c(100, 200))
get_analysis_date(
  simu_data,
  target_event_overall = 150,
  target_event_per_stratum = c(100, NA))

# example 5: cut for analysis when there are at least 100 events
# in the biomarker positive population,
# and at least 200 events in the biomarker negative population, which arrives later.
# But will stop at the 30-th months if events less than 100/200.
get_analysis_date(
  simu_data,
  target_event_per_stratum = c(100, 200),
  max_extension_for_target_event = 30)

# example 6: cut for analysis after 12 months followup when 80\%
# of the patients are enrolled in the overall population.
get_analysis_date(
  simu_data,
  enroll_rate = enroll_rate,
  min_n_overall = n * 0.8,
  min_followup = 12)

# example 7: cut for analysis when 12 months after at least
# 200/160 patients are enrolled at the
# biomarker positive/negative population.
get_analysis_date(
  simu_data,
  enroll_rate = enroll_rate,
  min_n_per_stratum = c(200, 160),
  min_followup = 12)
get_analysis_date(
  simu_data,
  enroll_rate = enroll_rate,
  min_n_per_stratum = c(200, NA),
  min_followup = 12)
}
