% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simfix2simPWSurv.R
\name{simfix2simPWSurv}
\alias{simfix2simPWSurv}
\title{Conversion of enrollment and failure rates from sim_fixed_n() to sim_pw_surv() format}
\usage{
simfix2simPWSurv(
  failRates = tibble(Stratum = "All", duration = c(3, 100), failRate = log(2)/c(9, 18),
    hr = c(0.9, 0.6), dropoutRate = rep(0.001, 2))
)
}
\arguments{
\item{failRates}{Piecewise constant control group failure rates, hazard ratio for experimental vs control,
and dropout rates by stratum and time period.}
}
\value{
A \code{list} of two \code{tibble} components formatted for \code{simtrial::sim_pw_surv()}:
\code{failRates} and \code{dropoutRates}.
}
\description{
\code{simfix2simPWSurv()} converts failure rates and dropout rates entered in the simpler
format for \code{sim_fixed_n()} to that used for \code{simtrial::sim_pw_surv()}.
The \code{failRates} argument for \code{sim_fixed_n()} requires enrollment rates, failure rates
hazard ratios and dropout rates by strata for a 2-arm trial, \code{simtrial::sim_pw_surv()}
is in a more flexible but less obvious but more flexible format.
Since \code{sim_fixed_n()} automatically analyzes data and \code{simtrial::sim_pw_surv()} just produces
a simulation dataset, the latter provides additional options to analyze or otherwise evaluate
individual simulations in ways that \code{sim_fixed_n()} does not.
}
\examples{
library(tidyr)
library(dplyr)
library(tibble)

# example 1
# Convert standard input
simfix2simPWSurv()

# Stratified example
failRates <- tibble(Stratum = c(rep("Low", 3),rep("High", 3)),
                    duration = rep(c(4, 10, 100), 2),
                    failRate = c(.04, .1, .06,
                                 .08,.16,.12),
                    hr = c(1.5, .5, 2/3,
                           2, 10/16, 10/12),
                    dropoutRate =.01)

x <- simfix2simPWSurv(failRates)

# Do a single simulation with the above rates
# Enroll 300 patients in ~12 months at constant rate
sim <- simPWSurv(n = 300,
                 strata = tibble(Stratum = c("Low","High"), p = c(.6, .4)),
                 enrollRates = tibble(duration = 12, rate = 300 / 12),
                 failRates = x$failRates,
                 dropoutRates = x$dropoutRates)

# Cut after 200 events and do a stratified logrank test
dat <- sim \%>\%
  cut_data_by_event(200) \%>\%              # cut data
  counting_process(arm = "Experimental") \%>\%  # convert format for tenFH
  tenFH(rg = tibble(rho=0,gamma=0))    # stratified logrank

}
